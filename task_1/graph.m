function graph()
% Входные данные (по дефолту: 0.2, 1.8, 10)
firstPoint = input('Начальная точка: ');
lastPoint = input('Конечная точка: ');
numPoints = input('Количество промежуточных точек: ');
members = input('Количество членов для суммы: ');

% Считаем интервал промежуточных точек
interval = abs(lastPoint-firstPoint)/numPoints;

% Инициализируем объект класса Pero
p = Pero(firstPoint,f(firstPoint,members));

% И инициализируем переменные для пункта (1.3)
ySumm = 0;
% Дополняем массив с точками
for i = firstPoint:interval:lastPoint
  present = f(i,members); % Вводим переменную, чтобы не считать
                        % несколько раз одно и то же.
   % (1.4) - снова просчитываем предыдущее значение функции ..
   % если это не первый проход, то значит было предыдущее значение в этом
   % отрезке
   if i~=firstPoint
   iPrev = i-interval;
   last = f(iPrev,members);
   % .. и сравниваем знаки соседних точек. Если знаки различаются,
   % то на данном сегменте функция пересекает ось 0X.
 if present*last <= 0
     %сработало условие различия знаков, либо одно из значений
     %равно нулю, значит  есть точка пересечения,найдем ёё ( подобие
     %треугольников)...вообще есть вариант, что оба значения равны нулю,
     %тогда функция имеет бесконечное число точек пересечения - отбрасываем
     %этот вариант, с ним неинтересно жить))
       z=i-interval*abs(present)/(abs(last)+abs(present));
      markz(z,i,present,p); 
 end
   end
     p.punct(i,present);
     p.draw
% (1.3) - считаем сумму координат по  y
   ySumm = ySumm + present;
end
% Строим график
% Задаем единичные векторы на обоих осях равными ..
axis('equal');
% (1.3) - добавляем линию
% Переходим в точку начала линии(справа) ..
p.punct(lastPoint, ySumm/numPoints);
% Сначала устанавливаем белый цвет линии ..
 p.set('lineColor' , 'w');
 p.draw
p.punct(firstPoint, ySumm/numPoints);
 % .. и подрубаем цвет обратно
 p.set('lineColor' , 'b');
 % Строим линию
 p.draw
end